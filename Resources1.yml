AWSTemplateFormatVersion: 2010-09-09
Description: creating resources in aws for fun in yaml language using cloudformation 

Parameters:
  VPC:
    Description: list of existing VPCs in this region
    Type: AWS::EC2::VPC::Id

  AZ:
    Description: list of existing Availability Zones in this region
    Type: AWS::EC2::AvailabilityZone::Name  

  subnetpublic:  
    Description: select subnet from chosen VPC
    Type: AWS::EC2::Subnet::Id

  s3bucketname: 
    Description: type in unique bucket name
    Type: String  

  InstanceType:
      Description: WebServer EC2 instance type
      Type: String
      Default: t2.micro
      AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      ConstraintDescription: must be a valid EC2 instance type.
 
  AMIID:
    Description: The EC2 AMI id found in ssm parameter store
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    ConstraintDescription: Must be a valid AMI based on the region

  VolumeSize:
    Description: EBS Volume size
    Type: Number
    Default: 8
    MinValue: 8
    MaxValue: 100
    ConstraintDescription: must be a number between 8 to 100 Gb

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  SecurityGroupPortSSH:
    Description: Simple Description of a Number Parameter
    Type: Number
    
  SecurityGroupPortHTTP:
    Description: Simple Description of a Number Parameter
    Type: Number

  IpSourceSSH:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '5'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.          

  IpSourceHTTP:
    Description: The IP address range that can be used to HTTP to the EC2 instances
    Type: String
    MinLength: '5'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources: 
  myvpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.1.0.0/16"
      EnableDnsHostnames: "true"
      EnableDnsSupport: "true"
      Tags: 
        - Key: Name
          Value: EMI-VPC
  
  mysubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Ref: AZ
      CidrBlock: "10.1.1.0/24"
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: EmiSubnet1public
      VpcId: 
        Ref: myvpc

  mysubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Ref: AZ
      CidrBlock: "10.1.2.0/24"
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: EmiSubnet1private
      VpcId: 
        Ref: myvpc

  InstanceSecGroupName:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebInstance-sg
      GroupDescription: allows http and ssh to instance
      VpcId:
        Ref: VPC
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 
            Ref: SecurityGroupPortSSH
          ToPort: 
            Ref: SecurityGroupPortSSH
          CidrIp: 
            Ref: IpSourceSSH
        - IpProtocol: tcp
          FromPort: 
            Ref: SecurityGroupPortHTTP
          ToPort: 
            Ref: SecurityGroupPortHTTP
          CidrIp: 
            Ref: IpSourceHTTP  
      Tags:
        - Key: Name
          Value: dinho-sg

  myEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      KeyName: 
        Ref: KeyName
      ImageId: 
        Ref: AMIID
      InstanceType: 
        Ref: InstanceType
      BlockDeviceMappings:
      -
       DeviceName: /dev/xvda
       Ebs:
        VolumeType: gp2
        DeleteOnTermination: true
        VolumeSize: 
          Ref: VolumeSize
      SecurityGroupIds:
        - Ref: InstanceSecGroupName
      SubnetId: 
        Ref: subnetpublic
      UserData: 
        Fn::Base64: |
          #!/bin/bash
          sudo su
          yum update -y
          yum install -y httpd.x86_64
          systemctl start httpd.service
          systemctl enable httpd.service
          wget -P ../../var/www/html https://s3.amazonaws.com/emidinho.net/index.html

      Tags:
        - Key: Name
          Value: emidinho-WebInstance
        - Key: CreatedBy
          Value: emidinho

  mybuc:
    Type: 'AWS::S3::Bucket'
    Properties: 
      AccessControl: Private 
      BucketName: 
        Ref: s3bucketname
      Tags:
        - Key: Name
          Value: emi-bucbuc
                                    